//-----------------------------------------------------------------------------
//	Textured.hlsl: A simple shader for textured
//	Created by Vlad Gordienko, 2018
//-----------------------------------------------------------------------------

#include "Common.ffxh"

cbuffer Effect : register( b2 )
{
	float4 color;
}

Texture2D<float4> myTexture : register( t0 );
SamplerState texSampler : register( s0 );

struct VsInput
{
	float2 position : POSITION;
	float2 tCoord : TEXCOORD0;
};

struct VsOutput
{
	float4 position : SV_Position;
	float2 tCoord : TEXCOORD0;
};

VsOutput vsMain( in VsInput input )
{
	VsOutput output;
	output.position = mul( float4( input.position, 0.f, 1.f ), g_projectionMatrix );
	output.tCoord = input.tCoord;
	return output;
}

float4 psMain( in VsOutput input ) : SV_Target
{
	float4 myCol = myTexture.Sample( texSampler, input.tCoord );

	if( myCol.a < 0.1 )
		discard;

	return pow( doSomething( color * myCol ), 1.0 );
}